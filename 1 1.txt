10 => 10
(+ 5 3 4) => 12
(- 9 1) => 8
(/ 6 2) => 3
(+ (* 2 4) (- 4 6)) => 6
(define a 3) => #<void>
(define b (+ a 1)) => #<void>
(+ a b (* a b)) => 19
(= a b) => #f
(if (and (> b a) (< b (* a b))) b a) => 4  (if the and evaluates true, then it would be 4, otherwise 3)
(cond ((= a 4) 6) ((= b 4) (+ 6 7 a)) (else 25)) => 16 (If a -4, return 6), (if b is 4 return 6+7+a (16)), else 25
(+ 2 (if (> b a) b a)) => 6 (2 + 4)
(* (cond ((> a b) a) ((< a b) b)(else -1)) (+ a 1)) =>16